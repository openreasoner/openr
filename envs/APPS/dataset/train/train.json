[{"index": 4000, "code_type": "call_based", "method_name": "strong_num", "prompt": "\nQUESTION:\n# Definition\n\n**_Strong number_** is the number that *the sum of the factorial of its digits is equal to number itself*.\n\n## **_For example_**:  **_145_**, since \n```\n1! + 4! + 5! = 1 + 24 + 120 = 145\n```\nSo, **_145_** is a **_Strong number_**. \n____\n\n# Task\n\n**_Given_** a number, **_Find if it is Strong or not_**.\n____\n\n# Warm-up (Highly recommended)\n\n# [Playing With Numbers Series](https://www.codewars.com/collections/playing-with-numbers)\n___\n\n# Notes \n\n* **_Number_** *passed is always*  **_Positive_**.\n* **_Return_** *the result as* **_String_**\n___\n\n# Input >> Output Examples\n\n\n```\nstrong_num(1) ==> return \"STRONG!!!!\"\n```\n\n## **_Explanation_**:\n\nSince , **_the sum of its digits' factorial of (1) is equal to number itself (1)_** , **_Then_** its a **_Strong_** .  \n____\n\n```\nstrong_num(123) ==> return \"Not Strong !!\"\n```\n\n## **_Explanation_**:\n\nSince **_the sum of its digits' factorial of 1! + 2! + 3! = 9 is not equal to number itself (123)_** , **_Then_** it's  **_Not Strong_** . \n___\n\n```\nstrong_num(2)  ==>  return \"STRONG!!!!\"\n```\n\n## **_Explanation_**:\n\nSince **_the sum of its digits' factorial of 2! = 2 is equal to number itself (2)_** , **_Then_** its a **_Strong_** .  \n____\n\n```\nstrong_num(150) ==> return \"Not Strong !!\"\n```\n\n## **_Explanation_**:\n\nSince **_the sum of its digits' factorial of 1! + 5! + 0! = 122 is not equal to number itself (150)_**, **_Then_** it's **_Not Strong_** . \n___\n___\n___\n\n# [Playing with Numbers Series](https://www.codewars.com/collections/playing-with-numbers)\n\n# [Playing With Lists/Arrays Series](https://www.codewars.com/collections/playing-with-lists-slash-arrays)\n\n# [For More Enjoyable Katas](http://www.codewars.com/users/MrZizoScream/authored)\n___\n\n## ALL translations are welcomed\n\n## Enjoy Learning !!\n# Zizou\ndef strong_num(number):\n\t\nUse Call-Based format\nANSWER:\n", "train_in_outs": {"inputs": [[40585]], "outputs": [["STRONG!!!!"]]}, "test_in_outs": {"inputs": [[2999999]], "outputs": [["Not Strong !!"]]}}, {"index": 4001, "code_type": "call_based", "method_name": "dot", "prompt": "\nQUESTION:\nThis is now a little serie :)\n\nFunny Dots\n\nYou will get two Integer n (width) and m (height) and your task is to draw following pattern. Each line is seperated with '\\n'.\n\nBoth integers are equal or greater than 1. No need to check for invalid parameters.\n\ne.g.:\n\n\n\n                                          +---+---+---+\n            +---+                         | o | o | o |\ndot(1,1) => | o |          dot(3,2) =>    +---+---+---+            \n            +---+                         | o | o | o |\n                                          +---+---+---+\n\n\n Serie: ASCII Fun\n\nASCII Fun #1: X-Shape\nASCII Fun #2: Funny Dots\nASCII Fun #3: Puzzle Tiles\nASCII Fun #4: Build a pyramid\ndef dot(n,m):\n\t\nUse Call-Based format\nANSWER:\n", "train_in_outs": {"inputs": [[1, 1]], "outputs": [["+---+\n| o |\n+---+"]]}, "test_in_outs": {"inputs": [[3, 2]], "outputs": [["+---+---+---+\n| o | o | o |\n+---+---+---+\n| o | o | o |\n+---+---+---+"]]}}]